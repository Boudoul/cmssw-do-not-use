---
title: CMS Offline Software
layout: default
related:
 - { name: Home, link: index.html }
 - { name: Project, link: https://github.com/cms-sw/cmssw }
 - { name: Topic Collector, link: https://eulisse.web.cern.ch/eulisse/cgi-bin/git-collector/cmsgit}
 - { name: Feedback, link: https://github.com/cms-sw/cmssw/issues/new }
---
# FAQs

* auto-gen TOC:
{:toc}

# General questions

## Where can I learn about git, github in general?

- Generic git help can be found at <http://git-scm.com/book/>.
- github.com specific help can be found at <https://help.github.com>.
- A 15 minutes, interactive, git tutorial <http://try.github.com/levels/1/challenges/1>

## How do I subscribe to github?

In order to develop CMSSW you will need a github account and to link it to your
CERN account. This is easily done by going to [CMS Topic
Collector][cms-topic-collector].

* In case you don't, simply click on the "Sign up for free" button 

  ![signup button](images/github-signup.png)

  and follow the instructions to create a new account.

  Go back to the [CMS Topic Collector][cms-topic-collector] page when done.

 * In case you already have an account you can simply use "the Sign in" dialog and
put your username and password.

  ![signin dialog](images/github-signin.png)

Once you are done, you'll be prompted to grant CMS Topic Collector the rights to
connect to your github account, simply click on "Authorize app".

![signup button](images/github-authorize.png)

Once you are done, you might want to execute the following commands to add easy
to remember names for some CMS specific things:

    git config --global remote.cmssw-main.url git@github.com:cms-sw/cmssw.git 
    git config --global remote.cmssw-main-ro.url git://github.com/cms-sw/cmssw.git
    git config --global core.sparsecheckout true

You should also setup your personal information, so that when you commit your real name,
and not your username will be used:

    git config --global user.name Enrico Fermi

*NOTE:* Should we add this to the default CMS environment?

[cms-topic-collector]: https://eulisse.web.cern.ch/eulisse/cgi-bin/git-collector/cmsgit

# Working with CMSSW on github

## How do I checkout one or more packages?

If you are in a CMSSW area (remember to do `cmsenv`) you can simply use:
  
    git addpkg <package-name>

once you have developments you can checkout dependent packages by doing.

    git checkdeps

[Read more.](git-addpkg)

## How do I develop a new feature using git?

First of all you need to fork cmssw to your own personal repository. This
repository will be used to hold all your incomplete developments. 

**NOTE**: all this can be automated the first time people connect to a yet to be
  introduced "Topic Collector".

Once you have done that, add a shortcut to it.

    GITHUB_USER=<your github username>
    git config --global remote.cmssw-me.url git@github.com:$GITHUB_USER/cmssw.git 

In your working area checkout a few packages you want to modify via
`git-addpkg`. When you are ready to start developing create a new topic branch
to hold your developments, e.g.:

    git checkout -b for/CMSSW_6_2_X/my-topic-branch

Notice you'll be able to add more packages afterwards, so do not worry if you don't
have all of them right ahead.

Once you are happy with your changes, push them to your private repository on
github, e.g.:

    git push cmssw-me for/CMSSW_6_2_X/my-topic-branch

You can do the above multiple times, whenever you have updated your development.
Whenever you are happy, open a pull request to merge your topic branch into the
official repository.

This can be done by going to [CMS Topic Collector][cms-topic-collector] and by
clicking on the "Create new pull request for ...".

![Create pull request](images/create-pull-request.png) 

This will redirect you to the github equivalent of the "tagset publishing"  page in the old tag collector
("pull request creation" in git jargon):

![Publish pull request](images/publish-branch.png) 

there you can select your release queue (or "release branch") and your source branch.

## How do I check the status of my pull request(s).

Go to the [CMS Topic Collector][cms-topic-collector]. There you'll find all the
open requests and their approval status.

## How do I make sure my topic branch is updated with the latest developments?

Simply merge the release branch into your topic branch:

    git checkout topic
    git fetch cmssw-main CMSSW_6_2_X
    git merge cmssw-main/CMSSW_6_2_X

or in one command:

    git pull cmssw-main CMSSW_6_2_X

assuming you are on the `topic` branch already. 

For more information about merging branching read
[here](http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging).

## How do I migrate my UserCode area to github?

UserCode areas will not be centrally migrated, however we provide scripts and
assistance to migrate them to github, or the git / svn service of your
preference.

Assuming you already have your own account on github (if not follow the
instructions
[above](http://cms-sw.github.io/cmssw/faq.html#how_do_i_subscribe_to_github)),
the first step is to create a new repository to hold your usercode. 
This can be done by simply going to [https://github.com/new]().

![https://github.com/new](images/create-new-repository.png)

Click on "Create Repository" and note down the URL of your newly created
repository.

Now you want to migrate your old `UserCode` area to git. This can be done
from inside a CMSSW (`CMSSW_6_2_X or later`) release on `lxplus` by doing:

    MYUSERCODE=Eulisse
    cvs2git --blobfile=git-blob.dat --dumpfile=git-dump.dat \
            /afs/cern.ch/project/cvs/reps/CMSSW/UserCode/$MYUSERCODE \
            --symbol-transform="(.*)/:\1-" \
            --use-external-blob-generator \
            --fallback-encoding "UTF8" \
            --username $USER 

This step could take a few seconds or hours, depending on how much stuff you
have in your user area. If you have large datafiles we reccomend split the
repository into two parts, one for the datafiles, one for the actual code.

You can now import your old CVS repository into a new git one you created
on git hub:

    git init usercode
    cd usercode
    git remote add origin <your-usercode-repository-on-github>
    cat ../git-blob.dat ../git-dump.dat | git fast-import
    git push --mirror -u origin

Further information about cvs2git can be found at <http://cvs2svn.tigris.org/cvs2git.html>.

*NOTES*: Provide a single script?

## CVS-speak to git speak

| CMS CVS                        | CMS GIT                                      |
| -                              | -                                            |
| tagset                         | topic branch                                 |
| publish a tagset               | create a pull request                        |
| Tag Collector                  | Topic Collector                              |
| `addpkg`                       | `git addpkg`                                 |
| `checkdeps`                    | `git checkdeps`                              |
| `cmstc tagset <tagset-id> -a`  | `git pull cmssw-main --track <topic-branch>` |
| `cvs log`                      | `git log`                                    |
| `cvs diff -r some tag`         | `git diff -r <some-tag>                      |

## Do you have any more in-depth FAQs?

Yes, please look at the [Advanced Usage](advanced-usage) section.

## How do I ask a question?

If you have more questions about git and CMSSW on git, please use [this
form][new-faq-form].

[new-faq-form]: https://github.com/cms-sw/cmssw/issues/new
